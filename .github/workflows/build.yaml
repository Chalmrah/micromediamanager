name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [linux, windows]
        arch: [amd64]

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'

      - name: Code quality test
        uses: golangci/golangci-lint-action@v6
        env:
          GOOS: ${{ matrix.os }}
        with:
          version: latest
          skip-cache: true

      - name: Build MicroMediaManager for ${{ matrix.os }} ${{ matrix.arch }}
        run: |
          mkdir -p releases/${{ matrix.os }}-${{ matrix.arch }}
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -ldflags "-X main.buildVersion=$(git describe --tags --always --dirty) -X main.buildCommit=$(git rev-parse --short HEAD) -X main.buildDate=$(date -u +"%Y-%m-%d")" -o micromediamanager-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }}

      - name: Release with Notes
        uses: softprops/action-gh-release@v1
        with:
          files: |
            micromediamanager-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}